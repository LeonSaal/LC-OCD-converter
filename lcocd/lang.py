from dotmap import DotMap


lang = DotMap()
lang.sel_conv = "Select files to convert"
lang.sel_folder = "Select folder"
lang.incl_sub = "Include subdirectories"
lang.sel_dest = "Select destination folder"
lang.skip = "Skip if destination file already exists"
lang.same_folder = "source folder"
lang.diff_folder = "different folder"
lang.keep_sub = "Keep folder structure"
lang.settings = "Settings"
lang.incl_signal = "Include:"
lang.corr = "Corrections:"
lang.lin_corr = "Linear baseline-correction"
lang.int = "Integrate"
lang.add = "add"
lang.delete = "delete"
lang.mod = "modify"
lang.convert = "convert"
lang.exit = "exit"
lang.enter_fname = "Please enter a file name"
lang.start = "start"
lang.name = "name"
lang.end = "end"
lang.out_fname = "Destination file:"
lang.input_warning = f"{lang.start} and {lang.end} must be both positive numbers and {lang.start} < {lang.end}!"
lang.fopen_warning = (
    "is openened by another program.\n To proceed, close file or enter new name."
)
lang.prog_name = "LC-OCD converter"
lang.info = "info"
lang.about = "about"
lang.contact_info = "Leon Saal\nleon.saal@uba.de\n2022"
lang.file = "files"
lang.file_prev = "file preview"
lang.cl = "clear"
lang.tip_ftable = "click row to add to graph below"
lang.tip_itable = "click on row to modify/delete, below to add rows"
lang.tip_ftree = "click on element to list files"
lang.folder_browser = "browse folders"
lang.fig = "figure"
lang.default_int = "load default"
lang.bounds_int = "Integration bounds"
lang.load_int = "load from file"
lang.err_int_load = (
    'Error loading from file. File must contain "start", "end" and "name" in header.'
)
lang.warn = "Warning"
lang.fout_exist = "already exists!"
lang.overwr = "Overwriting"
lang.curr_sample = "Current sample:"
lang.convo = "conversion"
lang.sample = "sample"
lang.signal = "signal"
lang.no_file_warning = "No files found in "
lang.min = "minutes"
